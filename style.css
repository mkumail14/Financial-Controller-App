    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
      }
      
      /* Modal Content */
      .modal-content {
        background-color: #111111;
        margin: auto;
        padding: 20px;
        border: 3px solid #bd5c5c;
        width:50%;
    color: white;  
    }
      
     
  







.form__group {
    position: relative;
    padding: 20px 0 0;
    width: 100%;
    max-width: 180px;
  }
  
  .form__field {
    font-family: inherit;
    width: 100%;
    border: none;
    border-bottom: 2px solid #9b9b9b;
    outline: 0;
    font-size: 17px;
    color: #ffffff;
    padding: 7px 0;
    background: transparent;
    transition: border-color 0.2s;
  }
  
  .form__field::placeholder {
    color: transparent;
  }
  
  .form__field:placeholder-shown ~ .form__label {
    font-size: 17px;
    cursor: text;
    top: 20px;
  }
  
  .form__label {
    position: absolute;
    top: 0;
    display: block;
    transition: 0.2s;
    font-size: 17px;
    color: #9b9b9b;
    pointer-events: none;
  }
  
  .form__field:focus {
    padding-bottom: 6px;
    font-weight: 700;
    border-width: 3px;
    border-image: linear-gradient(to right, #116399, #38caef);
    border-image-slice: 1;
  }
  
  .form__field:focus ~ .form__label {
    position: absolute;
    top: 0;
    display: block;
    transition: 0.2s;
    font-size: 17px;
    color: #38caef;
    font-weight: 700;
  }
  
  /* reset input */
  .form__field:required, .form__field:invalid {
    box-shadow: none;
  }








  .modalButton {
    padding: 15px 25px;
    border: unset;
    border-radius: 15px;
    color: #212121;
    z-index: 1;
    background: #e8e8e8;
    position: relative;
    font-weight: 1000;
    font-size: 17px;
    -webkit-box-shadow: 4px 8px 19px -3px rgba(0,0,0,0.27);
    box-shadow: 4px 8px 19px -3px rgba(0,0,0,0.27);
    transition: all 250ms;
    overflow: hidden;
   }
   
   .modalButton::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0;
    border-radius: 15px;
    background-color: #116399;
    z-index: -1;
    -webkit-box-shadow: 4px 8px 19px -3px rgba(0,0,0,0.27);
    box-shadow: 4px 8px 19px -3px rgba(0,0,0,0.27);
    transition: all 250ms
   }
   
   .modalButton:hover {
    color: #e8e8e8;
   }
   
   .modalButton:hover::before {
    width: 100%;
   }





   /* Hide the default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
   }
   
   .container {
    display: block;
    position: relative;
    cursor: pointer;
    font-size: 20px;
    user-select: none;
   }
   
   /* Create a custom checkbox */
   .checkmark {
    position: relative;
    top: 0;
    left: 0;
    height: 1.3em;
    width: 1.3em;
    background-color: #343434;
    border-radius: 5px;
    transition: all 0.5s;
   }
   
   /* When the checkbox is checked, add a blue background */
   .container input:checked ~ .checkmark {
    background-color: #f0f0f0;
    border: 2px solid #343434;
   }
   
   /* Create the checkmark/indicator (hidden when not checked) */
   .checkmark:after {
    content: "";
    position: absolute;
    display: none;
    filter: drop-shadow(0 0 10px #888);
   }
   
   /* Show the checkmark when checked */
   .container input:checked ~ .checkmark:after {
    display: block;
   }
   
   /* Style the checkmark/indicator */
   .container .checkmark:after {
    left: 0.3em;
    top: 0.05em;
    width: 0.3em;
    height: 0.65em;
    border: solid #343434;
    border-width: 0 0.2em 0.2em 0;
    border-radius: 4px;
    transform: rotate(45deg);
    animation: bounceFadeIn 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
   }
   
   @keyframes bounceFadeIn {
    from {
     transform: translate(0, -10px) rotate(45deg);
     opacity: 0;
    }
   
    to {
     transform: translate(0, 0) rotate(45deg);
     opacity: 1;
    }
   }